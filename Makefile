.PHONY: install deploy uninstall reinstall deps validate launch update delete status
.PHONY: list-outputs list-resources locust-smoketest locust-deploy locust-open clean help
.ONESHELL: locust-deploy locust-open clean
.DEFAULT_GOAL := help

# Load Sceptre deployment configuration (used by awsebcli)
VARS := $(shell grep -E "profile|region|project_code" ./aws/config/config.yaml | sed -e 's/: /=/g')
$(foreach v,$(VARS),$(eval $(shell echo export $(v))))

# Load dluster stack name as generated by Sceptre (used by awsebcli)
stack := $(shell find ./aws/config/ -mindepth 1 -maxdepth 1 -type d -printf '%f' | tr -d '/')
CLUSTER_CFN_STACK_NAME := $(project_code)-$(stack)-cluster

# Load Elastic Beanstalk "Solution Stack Name" (used by awsebcli)
CLUSTER_EB_SOLUTION_STACK_NAME := $(shell sed -n -e 's/^.*SolutionStackName: //p' ./aws/config/locust/cluster.yaml)

install: deps launch locust-deploy ## Create the Locust environment and deploy a test suite for blazedemo.com

deploy: deps update locust-deploy ## Deploy modifications to the Locust test suite and/or CloudFormation templates

uninstall: deps delete clean ## Delete the Locust environment, local dependencies and temporary files

deps: # Install local dependencies in virtual environments (requires pipenv)
	$(call cyan, "make $@ ...")
	# locustio/sceptre virtualenv
	@pipenv --bare install
	# awsebcli virtualenv and temporary files
	@cd ./aws/files/app/
	@pipenv --bare install

validate: # Validate CloudFormation Template(s)
	$(call cyan, "make $@ ...")
	@pipenv run sceptre --dir aws validate $(stack)

launch: validate # Deploy CloudFormation Stack(s)
	$(call cyan, "make $@ ...")
	@pipenv run sceptre --dir aws launch --yes $(stack)

update: validate # Update CloudFormation Stack(s)
	$(call cyan, "make $@ ...")
	@pipenv run sceptre --dir aws update --yes $(stack)

delete: # Terminate CloudFormation Stack(s)
	$(call cyan, "make $@ ...")
	@pipenv run sceptre --dir aws delete --yes $(stack)

status: # Show deployment status of the CloudFormation Stack(s)
	$(call cyan, "make $@ ...")
	@pipenv run sceptre --dir aws status $(stack)

list-outputs: # List CloudFormation Outputs of the Stack(s)
	$(call cyan, "make $@ ...")
	@pipenv run sceptre --dir aws list outputs $(stack)

list-resources: # List CloudFormation Resources of the Stack(s)
	$(call cyan, "make $@ ...")
	@pipenv run sceptre --dir aws list resources $(stack)

locust-smoketest: # Smoke test the local Locust test suite
	$(call cyan, "make $@ ...")
	@pipenv run locust --no-web --only-summary \
		--locustfile=./aws/files/app/locustfile.py \
		--clients=100 --hatch-rate=20 --run-time=10s

locust-deploy: locust-smoketest # (Re)deploy the Locust application
	$(call cyan, "make $@ ...")
	@cd ./aws/files/app/
	# (Re)initialize the EB CLI to target the Elastic Beanstalk environment
	@rm -rf ./.elasticbeanstalk/
	@pipenv run eb init --profile $(profile) --region $(region) \
		--platform $(CLUSTER_EB_SOLUTION_STACK_NAME) \
		$(CLUSTER_CFN_STACK_NAME)
	# Deploy Locust to the Elastic Beanstalk environment
	@pipenv run eb deploy --profile $(profile) --region $(region) \
		--staged $(CLUSTER_CFN_STACK_NAME)
	# Show the status of the Elastic Beanstalk deployment
	@pipenv run eb status --profile $(profile) --region $(region) \
		$(CLUSTER_CFN_STACK_NAME)
	# Open the Locust web GUI in a browser window
	@pipenv run eb open --profile $(profile) --region $(region) \
		$(CLUSTER_CFN_STACK_NAME)

locust-open: # Open the Locust web UI
	$(call cyan, "make $@ ...")
	@cd ./aws/files/app/
	# (Re)initialize the EB CLI to target the Elastic Beanstalk environment
	@rm -rf ./.elasticbeanstalk/
	@pipenv run eb init --profile $(profile) --region $(region) \
		--platform $(CLUSTER_EB_SOLUTION_STACK_NAME) \
		$(CLUSTER_CFN_STACK_NAME)
	# Open the Locust web GUI in a browser window
	@pipenv run eb open --profile $(profile) --region $(region) \
		$(CLUSTER_CFN_STACK_NAME)

clean: # Delete temporary files and virtual environments
	$(call cyan, "make $@ ...")
	# Delete locustio/sceptre virtualenv
	@pipenv --rm
	# Delete awsebcli virtualenv and temporary files
	@cd ./aws/files/app/
	@pipenv --rm
	@rm -vrf __pycache__/
	@rm -vrf .elasticbeanstalk/

help:
	@awk 'BEGIN {FS = ":.*?## "} /^[a-zA-Z_-]+:.*?## / {printf "\033[36m%-18s\033[0m %s\n", $$1, $$2}' \
		$(MAKEFILE_LIST)

define cyan
	@tput setaf 6
	@echo $1
	@tput sgr0
endef
